import {ComboBox, VerticalBox, HorizontalBox, Button} from "sixtyfps_widgets.60";

struct Diag := {
   message: string,
}

BuildingPane := Rectangle {
    callback cancel <=> cancel_btn.clicked;
    property status <=> status_text.text;
    property <[Diag]> errors: [
        {message: "Hallo"}, {message: "Hallo"}, {message: "Hallo"}
    ];

    // capture all clicks
    TouchArea {}

    VerticalBox {
        status_text := Text { }

        Flickable {
            VerticalBox {
                alignment: start;
                for error in errors : Rectangle {
                    Text {
                        color: #833;
                        text: error.message;
                    }
                }
            }
        }

        HorizontalBox {
            alignment: space_between;
            cancel_btn := Button {
                text: "‚ùå Cancel";
            }
        }
    }

}

CargoUI := Window {
    title: "Cargo UI";
    preferred_height: 200px;
    preferred_width: 200px;

    property <string> status;
    property <[string]> packages;
    callback action(string, string, string);
    callback cancel;
    property <bool> is_building : false;
    property <[Diag]> errors;

    VerticalBox {
        alignment: start;
        HorizontalBox {
            alignment: start;
            Text { text: "package: "; }
            package_cb := ComboBox { model: packages; }
            Rectangle { width: parent.spacing*3; }
            Text { text: "mode: "; }
            mode_cb := ComboBox { current_value: "debug"; model: ["debug", "release"]; }
        }
        HorizontalBox {
            alignment: start;
            Button {
                text: "üöÄ Run";
                clicked => { action("run", package_cb.current_value, mode_cb.current_value); }
            }
            Button {
                text: "üèóÔ∏è Build";
                clicked => { action("build", package_cb.current_value, mode_cb.current_value); }
            }
            Button {
                text: "‚úÖ Check";
                clicked => { action("check", package_cb.current_value, mode_cb.current_value); }
            }
        }
        Text { text: status; wrap: word_wrap; overflow: elide; }
    }

    animated := Rectangle {
        width: 100%; height: 100%;
        y: is_building ? 0 : parent.height;
        animate y { duration: 250ms; easing: ease; }
        if (animated.y < root.height): BuildingPane {
            background: root.background;
            status: root.status;
            errors: root.errors;
            cancel => { root.cancel() }
        }
    }
}