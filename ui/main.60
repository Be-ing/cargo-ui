import {ComboBox, VerticalBox, HorizontalBox, Button, LineEdit} from "sixtyfps_widgets.60";

struct Diag := {
   message: string,
}

struct Action := {
    command: string,
    package: string,
    profile: string,
    extra: string, // bin or test name
}

BuildingPane := Rectangle {
    callback cancel <=> cancel_btn.clicked;
    property status <=> status_text.text;
    property <[Diag]> errors: [
        {message: "Hallo"}, {message: "Hallo"}, {message: "Hallo"}
    ];

    // capture all clicks
    TouchArea {}

    VerticalBox {
        status_text := Text { }

        Flickable {
            VerticalBox {
                alignment: start;
                for error in errors : HorizontalLayout {
                    Text {
                        color: #833;
                        text: error.message;
                    }
                }
            }
        }

        HorizontalBox {
            alignment: space_between;
            cancel_btn := Button {
                text: "‚ùå Cancel";
                height: min_height;
            }
        }
    }

}

CargoUI := Window {
    title: "Cargo UI";
    preferred_height: 500px;
    preferred_width: 300px;

    property <string> status;
    property <[string]> packages;
    property <[string]> extra_run;
    property <[string]> extra_test;
    callback action(Action);
    callback cancel;
    property <bool> is_building : false;
    property <[Diag]> errors;
    property <bool> workspace_valid : true;
    property <string> manifest_path <=> le_manifest.text;
    callback reload_manifest(string);
    callback show_open_dialog;

    // required because of a bug in sixtyfps 0.1.0 (fixed by e633ee82)
    property <Action> ignore_me;

    VerticalBox {
        //alignment: start;
        Text { text: "Cargo UI"; }

        HorizontalBox {
            Text { text: "Manifest:"; }
            le_manifest := LineEdit {
                accepted => { root.reload_manifest(le_manifest.text); }
                horizontal_stretch: 1;
            }
            Button {
                text: "üìÇ";
                clicked => { root.show_open_dialog(); }
            }
        }

        Rectangle { height: 40px; }

        HorizontalBox {
            alignment: start;
            Button {
                text: "üöÄ Run";
                enabled: root.workspace_valid;
                clicked => {
                    action({
                        command: "run",
                        package: package_cb.current_value,
                        profile: mode_cb.current_value,
                        extra: bin_cb.current_value
                    });
                }
            }
            bin_cb := ComboBox { model: extra_run; enabled: root.workspace_valid; }
        }
        HorizontalBox {
            alignment: start;
            Button {
                text: "üèóÔ∏è Build";
                enabled: root.workspace_valid;
                clicked => {
                    action({
                        command: "build",
                        package: package_cb.current_value,
                        profile: mode_cb.current_value,
                        extra: ""
                    });
                }
            }
        }
        HorizontalBox {
            alignment: start;
            Button {
                text: "üëç Check";
                enabled: root.workspace_valid;
                clicked => {
                    action({
                        command: "check",
                        package: package_cb.current_value,
                        profile: mode_cb.current_value,
                        extra: ""
                    });
                }
            }
        }
        HorizontalBox {
            alignment: start;
            Button {
                text: "üß™ Test";
                enabled: root.workspace_valid;
                clicked => {
                    action({
                        command: "test",
                        package: package_cb.current_value,
                        profile: mode_cb.current_value,
                        extra: test_cb.current_value,
                    });
                }
            }
            test_cb := ComboBox { model: extra_test; enabled: root.workspace_valid; }
        }

        Rectangle { }


        HorizontalBox {
            //alignment: start;
            Text { text: "Package:"; }
            package_cb := ComboBox { model: packages; enabled: root.workspace_valid; }
            Rectangle { }
            Text { text: "Profile: "; }
            mode_cb := ComboBox { current_value: "debug"; model: ["debug", "release"]; enabled: root.workspace_valid; }
            Rectangle { }
            //Text { text: "Toolchain: "; }
            //profile_cb := ComboBox { model: ["stable", "nightly"]; }
        }
        Text { text: status; wrap: word_wrap; overflow: elide; }
    }

    animated := Rectangle {
        width: 100%; height: 100%;
        y: is_building ? 0 : parent.height;
        animate y { duration: 250ms; easing: ease; }
        if (animated.y < root.height): BuildingPane {
            background: root.background;
            status: root.status;
            errors: root.errors;
            cancel => { root.cancel() }
        }
    }
}